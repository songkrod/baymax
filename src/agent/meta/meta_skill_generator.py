# src/agent/meta/meta_skill_generator.py

import os
from config.settings import settings
from services.llm import llm
from utils.logger import logger

GENERATED_SKILL_PATH = settings.SKILLS_GENERATED_PATH
os.makedirs(GENERATED_SKILL_PATH, exist_ok=True)

def sanitize_name(name: str) -> str:
    return name.lower().replace(" ", "_").replace("-", "_").strip("._")

def suggest_missing_skill(message: str, context: str = "") -> dict:
    """
    ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå skill ‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ ‚Üí ‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏õ‡πá‡∏ô JSON {"skill_name", "description", "example_code"}
    """
    prompt = f"""
    ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ñ‡∏≤‡∏°‡∏ß‡πà‡∏≤:
    "{message}"

    ‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏µ context ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:
    "{context}"

    ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏≠‡∏ö‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏û‡∏≠
    ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏™‡∏ô‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏Å‡∏¥‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° **‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô** ‡πÄ‡∏ä‡πà‡∏ô "weather_lookup" ‡∏´‡∏£‡∏∑‡∏≠ "location_reasoner"

    ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡πà‡∏≤ skill ‡∏ô‡∏µ‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏á
    ‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î Python ‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á skill ‡∏ô‡∏±‡πâ‡∏ô‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢ ‡πÜ

    ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö JSON ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢:
    {{
        "skill_name": ..., 
        "description": ..., 
        "example_code": ...
    }}
    """
    
    response = llm.respond(prompt)
    return llm.safe_json(response)

def generate_skill(user_input: str, user_id: str = "self") -> str:
    """
    ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå skill ‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏ü‡∏•‡πå skill ‡∏•‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
    ‡∏Ñ‡∏∑‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á ‡∏´‡∏£‡∏∑‡∏≠ "" ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    """
    result = suggest_missing_skill(user_input)

    if not result or "skill_name" not in result or "example_code" not in result:
        logger.warning("[üõ†Ô∏è] ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå skill ‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å input ‡∏ô‡∏µ‡πâ")
        return ""

    name = sanitize_name(result["skill_name"])
    filename = f"{name}.py"
    filepath = os.path.join(GENERATED_SKILL_PATH, filename)

    if os.path.exists(filepath):
        logger.info(f"[üì¶] skill {filename} ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß")
        return filename

    with open(filepath, "w", encoding="utf-8") as f:
        f.write(result["example_code"].strip())

    logger.info(f"[üß†] ‡∏™‡∏£‡πâ‡∏≤‡∏á skill ‡πÉ‡∏´‡∏°‡πà: {filename}")
    return filename