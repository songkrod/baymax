import re
from agent.memory_access.voice_memory import VoiceMemory
from utils.logger import logger

memory = VoiceMemory()

def extract_name_from_text(text: str) -> str | None:
    # ‡∏•‡∏≠‡∏á‡∏à‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏≤‡∏Å‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡πÄ‡∏ä‡πà‡∏ô "‡∏à‡∏≥‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏°‡∏ß‡πà‡∏≤ ‡πÇ‡∏≠‡∏°", "‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ú‡∏°‡∏ß‡πà‡∏≤‡πÄ‡∏ö‡∏¢‡πå‡∏Å‡πá‡πÑ‡∏î‡πâ"
    patterns = [
        r"‡∏ä‡∏∑‡πà‡∏≠(‡∏ú‡∏°|‡∏â‡∏±‡∏ô|‡∏´‡∏ô‡∏π)?‡∏ß‡πà‡∏≤\s*([^\s]+)",
        r"‡πÄ‡∏£‡∏µ‡∏¢‡∏Å(‡∏ú‡∏°|‡∏â‡∏±‡∏ô|‡∏´‡∏ô‡∏π)?‡∏ß‡πà‡∏≤\s*([^\s]+)",
        r"‡∏à‡∏≥‡∏ä‡∏∑‡πà‡∏≠(‡∏ú‡∏°|‡∏â‡∏±‡∏ô|‡∏´‡∏ô‡∏π)?‡∏ß‡πà‡∏≤\s*([^\s]+)"
    ]
    for pattern in patterns:
        match = re.search(pattern, text, re.IGNORECASE)
        if match:
            return match.group(2)
    return None

def run(user_id: str, text: str) -> str:
    name = extract_name_from_text(text)
    if not name:
        return "‡∏ú‡∏°‡πÑ‡∏°‡πà‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤‡∏≠‡∏∞‡πÑ‡∏£‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ä‡πà‡∏ß‡∏¢‡∏û‡∏π‡∏î‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÑ‡∏î‡πâ‡πÑ‡∏´‡∏°"

    memory.remember_name(user_id, name)
    logger.info(f"[üìõ] ‡∏à‡∏î‡∏à‡∏≥‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ {user_id} ‡πÄ‡∏õ‡πá‡∏ô '{name}' ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
    return f"‡πÇ‡∏≠‡πÄ‡∏Ñ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ú‡∏°‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏ß‡πà‡∏≤ {name}"